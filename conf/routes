# Routes

GET     /assets/*file               controllers.Assets.at(path = "/public", file)
GET     /views/*file                controllers.UIViews.at(path = "/ui/app/views", file)
GET     /ng/*file                   controllers.UIScripts.at(path = "/ui/app", file)

# Api
GET     /api/daily-menus            controllers.DailyMenus.index()

GET     /api/users/me               controllers.Users.showMe()

GET     /api/daily-orders/mine      controllers.DailyOrders.showMine()
POST    /api/daily-orders/mine      controllers.DailyOrders.createMine()
#PUT     /api/daily-orders/:id       controllers.DailyOrders.update(id)

# Root
GET     /                           controllers.Application.index(path = "")

# SecureSocial
GET     /login                      securesocial.controllers.LoginPage.login
GET     /logout                     securesocial.controllers.LoginPage.logout

GET     /signup                     securesocial.controllers.Registration.startSignUp
POST    /signup                     securesocial.controllers.Registration.handleStartSignUp
GET     /signup/:token              securesocial.controllers.Registration.signUp(token)
POST    /signup/:token              securesocial.controllers.Registration.handleSignUp(token)
GET     /reset                      securesocial.controllers.Registration.startResetPassword
POST    /reset                      securesocial.controllers.Registration.handleStartResetPassword
GET     /reset/:token               securesocial.controllers.Registration.resetPassword(token)
POST    /reset/:token               securesocial.controllers.Registration.handleResetPassword(token)
GET     /password                   securesocial.controllers.PasswordChange.page
POST    /password                   securesocial.controllers.PasswordChange.handlePasswordChange

GET     /authenticate/:provider     securesocial.controllers.ProviderController.authenticate(provider)
POST    /authenticate/:provider     securesocial.controllers.ProviderController.authenticateByPost(provider)
GET     /not-authorized             securesocial.controllers.ProviderController.notAuthorized

# Misc
GET     /*path                      controllers.Application.index(path)

